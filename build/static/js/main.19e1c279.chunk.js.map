{"version":3,"sources":["SocketContext.js","Components/Permission/Notification_toAcceptCall.js","Components/Start_page/DialogBox.js","Components/Conference_page/VideoBox.js","Components/Sign_in_page/SignInSide.js","Screens/JoiningPage.js","Components/Start_page/JoinWithCode.js","Screens/Welcome_page.js","Components/Start_page/PopUpGetId.js","Components/Conference_page/OptionFooter.js","Components/Conference_page/UserVideoContainer.js","Components/Conference_page/VideoContainer.js","Components/Conference_page/ChatFeature/MessageBox.js","Components/Conference_page/ChatFeature/ChatWindow.js","Components/Conference_page/DisplayUserWindow/PersonBox.js","Components/Conference_page/DisplayUserWindow/AllUserWindow.js","Components/Conference_page/SideWindow.js","Components/Conference_page/VideoConferenceMainPage.js","App.js","index.js"],"names":["socket","SocketContext","createContext","hostURL","ContextProvider","children","useState","stream","setStream","me","setMe","call","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","showJoin","setShowJoin","config","setConfig","callId","setCallId","connectionRef","useRef","room","setRoom","chats","setChats","useEffect","console","log","audio","video","navigator","mediaDevices","getUserMedia","then","currentStream","off","on","joinee","callUser","id","from","callerName","signal","answerCall","data","prevRoom","user","find","r","filter","peer","push","prevChats","time","Date","userId","conn","destroy","Peer","initiator","trickle","emit","to","current","userToCall","signalData","Provider","value","leaveCall","forEach","connectToServer","createRoom","disconnect","io","query","message","roomId","Notification_toAcceptCall","props","theme","useTheme","useMediaQuery","breakpoints","down","useContext","Grid","Dialog","open","openPermissionBox","onClose","onAdmitUser","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","onClick","fullWidth","color","autoFocus","useStyles","makeStyles","button","margin","spacing","paper_connect","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","DialogBox","classes","Box","className","openCallInfo","onClosingDialogBox","onCopy","text","startIcon","Assignment","fontSize","onChange","root","height","Video_Container","Option_container","width","SenderVideo_container","border","borderRadius","marginLeft","MyVideo_container","overflow","marginRight","fullScreen","halfScreen","position","bottom","right","MyVideo","SenderVideo","objectFit","withRouter","sendMessage","myVideo","userVideo","setOpenPermision","setOpenCallInfo","container","component","direction","alignItems","length","playsInline","ref","autoPlay","Typography","gutterBottom","muted","justify","OptionsBox","IconButton","aria-label","style","history","isReceivedCall","image","paper","display","flexDirection","avatar","secondary","main","form","marginTop","submit","videoBox","header","logo","zIndex","primary","JoiningPage","joinRoom","srcObject","JoinWithCode","React","setOpen","handleClose","TextField","label","e","target","side_image","Welcome_page","item","justifyContent","Avatar","noValidate","required","autoComplete","main_box","top","left","transform","transition","maxWidth","fontFamily","padding","borderBottom","title","close_button","cursor","outlined","background","fontWeight","body","overlay","PointerEvent","Chat_participants_optionBox","sideBox","onOpenChatWindow","onCloseSideWindow","onOpenPeopleWindow","UserVideoContainer","mainVideRef","VideoContainer","inline","getContrastText","indigo","MessageBox","avatar_letter","charAt","hrs","getHours","min","getMinutes","ListItem","ListItemAvatar","ListItemText","Fragment","input_footer","input","flex","iconButton","ChatWindow","setMessage","handleMessageSend","trim","List","map","content","inputFooter","Paper","InputBase","placeholder","onKeyUp","key","keyCode","PersonBox","AllUserWindow","size","titleRoot","closeButton","SideWindow","mainBody","videoContainer","sideWindow","optionFooter","VideoConferenceMainPage","setSideBox","openChatWindowHandler","openPeopleWindowHandler","closeSideWindowHandler","mainUserId","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19e1c279.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst SocketContext = createContext();\r\n\r\nlet socket;\r\nconst hostURL = 'http://localhost:5000';\r\n// const socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('placeholder text');\r\n    const [call, setCall] = useState(null);\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [showJoin, setShowJoin] = useState(true);\r\n    // const confi = {}\r\n    // const [video, setVideo] = useState(false);\r\n    const [config, setConfig] = useState({});  //for video and audio\r\n    const [callId, setCallId] = useState('');\r\n    // const myVideo = useRef();\r\n    // const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n    const [room, setRoom] = useState([]);\r\n    const [chats, setChats] = useState([]);\r\n\r\n    const joinRoom = () => {\r\n        if (socket && callId) {\r\n            socket.emit(\"joinRoom\", callId);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"context hosting in useeffect\")\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Room update\", room)\r\n    }, [room]);\r\n\r\n    useEffect(() => {\r\n        if (!config.audio && !config.video) {\r\n            // console.log(\"useeffect without ref\", myVideo.current)\r\n            return;\r\n        }\r\n        navigator.mediaDevices.getUserMedia(config)\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n                // if (myVideo.current)\r\n                // myVideo.current.srcObject = currentStream;\r\n                console.log(\"update ref src stream\")\r\n                // myVideo.current.muted = true;\r\n            });\r\n\r\n    }, [config]);\r\n\r\n    const connectToServer = (name, createRoom = false) => {\r\n        console.log(\"connect to server\")\r\n        if (socket) {\r\n            socket.disconnect();\r\n        }\r\n        socket = io(hostURL, {\r\n            query: \"name=\" + name + (createRoom ? \"&createRoom=true\" : \"\"),\r\n        })\r\n        socket.on('connect', () => {\r\n            console.log(\"connection to server established this is the socket id\", socket.id)\r\n            setMe(socket.id);\r\n        })\r\n        // socket.on('me', (id) => { console.log(\"update me id\", id); setMe(id); });\r\n    }\r\n    if (socket) {\r\n        socket.off(\"newUserJoined\");\r\n        socket.off(\"calluser\");\r\n        socket.off(\"callaccepted\");\r\n        socket.off(\"receiveMessage\");\r\n        socket.on(\"newUserJoined\", (joinee) => {\r\n            console.log(\"new user joined\", joinee);\r\n            callUser(joinee.id, joinee.name)\r\n        })\r\n        socket.on('calluser', ({ from, name: callerName, signal }) => {\r\n            console.log(\"CallUser function\", from, callerName);\r\n            // setCall({ isReceivedCall: true, from, name: callerName, signal })\r\n            answerCall(from, callerName, signal);\r\n        });\r\n        socket.on('callaccepted', (data) => {\r\n            console.log(\"callAccepted by\", data.name);\r\n            setRoom(prevRoom => {\r\n                let user = prevRoom.find(r => r.id === data.id);\r\n                let room = prevRoom.filter(r => r.id !== data.id);\r\n                if (user) {\r\n                    user.name = data.name;\r\n                    user.peer.signal(data.signal);\r\n                    room.push(user);\r\n                }\r\n                return room;\r\n            });\r\n        });\r\n        socket.on(\"receiveMessage\", data => {\r\n            console.log(\"received message\", data);\r\n            setChats(prevChats => [...prevChats, { ...data, time: new Date(), }])\r\n        })\r\n        socket.on(\"userLeft\", userId => {\r\n            let user = room.find(conn => conn.id === userId);\r\n            if(user){\r\n                console.log(\"user left\", user.name);\r\n                if(user.peer)\r\n                    user.peer.destroy();\r\n            }\r\n            setRoom(prevRoom => prevRoom.filter(conn => conn.id !== userId));\r\n        })\r\n    }\r\n    const sendMessage = message => {\r\n        let roomId = callId || me;\r\n        socket.emit(\"sendMessage\", { roomId, message });\r\n        setChats(prevChats => [...prevChats, { from: me, name, message, time: new Date(), }]);\r\n        console.log(\"Sending message\");\r\n    }\r\n    const answerCall = (id, name, signal) => {\r\n        setCallAccepted(true);\r\n        console.log(\"answer call request\")\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answercall', { signal: data, to: id });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            // console.log(\"received stream\")\r\n            // if (userVideo.current) {\r\n            //     userVideo.current.srcObject = currentStream;\r\n            //     userVideo.current.muted = true;\r\n            // }\r\n\r\n            setRoom(prevRoom => {\r\n                let user = prevRoom.find(r => r.id === id);\r\n                let room = prevRoom.filter(r => r.id !== id);\r\n                if (user) {\r\n                    user.stream = currentStream;\r\n                    room.push(user);\r\n                }\r\n                return room;\r\n            })\r\n        });\r\n        peer.on('connect', () => {\r\n            console.log(\"connection established\")\r\n        });\r\n        peer.signal(signal);\r\n        connectionRef.current = peer;\r\n        const user = {\r\n            peer,\r\n            stream: null,\r\n            id,\r\n            name\r\n        }\r\n        setRoom(prevRoom => [...prevRoom, user]);\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"my stream updated\", stream)\r\n        // stream = stream;\r\n    }, [stream])\r\n    const callUser = (id, name) => {\r\n        console.log(\"call User, stream ready ? \", stream);\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('calluser', { userToCall: id, signalData: data });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            console.log(\"received stream\");\r\n            // if (userVideo.current)\r\n            //     userVideo.current.srcObject = currentStream;\r\n            setRoom(prevRoom => {\r\n                let user = prevRoom.find(r => r.id === id);\r\n                let room = prevRoom.filter(r => r.id !== id);\r\n                if (user) {\r\n                    user.stream = stream;\r\n                    room.push(user);\r\n                }\r\n                return room;\r\n            })\r\n        });\r\n        peer.on('connect', () => {\r\n            console.log(\"connection established\")\r\n        });\r\n        connectionRef.current = peer;\r\n        const user = {\r\n            id, name, peer, stream: null\r\n        }\r\n        console.log(\"call and update room\")\r\n        setRoom(prevRoom => [...prevRoom, user]);\r\n    }\r\n    console.log(\"stream after each render\", stream)\r\n    \r\n    const leaveCall = () => {\r\n        console.log(\"leave call\");\r\n\r\n        setCallEnded(true);\r\n        if (connectionRef.current)\r\n            connectionRef.current.destroy();\r\n        \r\n        socket.emit(\"leaveRoom\", callId);\r\n\r\n        room.forEach(conn => {\r\n            if(conn.peer)\r\n                conn.peer.destroy();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            stream,\r\n            name,\r\n            room,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            showJoin,\r\n            setShowJoin,\r\n            config,\r\n            setConfig,\r\n            callId,\r\n            setCallId,\r\n            // callUser,\r\n            leaveCall,\r\n            // answerCall,\r\n            connectToServer,\r\n            room,\r\n            joinRoom,\r\n            chats,\r\n            sendMessage\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { SocketContext } from '../../SocketContext';\r\nimport { Box, Grid } from '@material-ui/core';\r\n\r\nexport default function Notification_toAcceptCall(props) {\r\n    // const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    // const handleClickOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    // const handleClose = () => {\r\n    //     setOpen(false);\r\n    // };\r\n\r\n    const { answerCall, } = useContext(SocketContext);\r\n\r\n    return (\r\n        <Grid>\r\n            {/* {\r\n                call.isReceivedCall && !callAccepted && (\r\n                    { handleClickOpen }\r\n                )\r\n            } */}\r\n            {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Open responsive dialog\r\n            </Button> */}\r\n            <Dialog\r\n                // fullScreen={fullScreen}\r\n                open={props.openPermissionBox}\r\n                onClose={props.onAdmitUser}\r\n                aria-labelledby=\"UserAcceptPermission\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">{props.user || \"User\"} is Calling...</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {props.user || \"user\"} want permission to join the call.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={props.onAdmitUser} fullWidth color=\"secondary\">\r\n                        Deny\r\n                    </Button>\r\n                    <Button variant=\"contained\" autoFocus onClick={answerCall} color=\"primary\" fullWidth>\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport { Box } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport { SocketContext } from '../../SocketContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Assignment } from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(2),\r\n        },\r\n        paper_connect: {\r\n            backgroundImage: 'url(\"./Desktop_image.jpg\")',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor:\r\n                theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function DialogBox(props) {\r\n    const classes = useStyles(props);\r\n    const { name, me, showJoin, setShowJoin } = useContext(SocketContext);\r\n    // const [open, setOpen] = React.useState(false);\r\n\r\n    // const handleClickOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    // const handleClose = () => {\r\n    //     setOpen(false);\r\n    // };\r\n\r\n    const handleJoin = () => {\r\n        setShowJoin(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box className={classes.button}>\r\n            {/* {showJoin && (\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\r\n                    New meeting\r\n                </Button>)} */}\r\n            {/* // ) : (\r\n            //     <IconButton color=\"primary\" onChange={handleClickOpen} className={classes.button} aria-label=\"Call Details\">\r\n            //         <MoreVertIcon fontSize=\"large\" />\r\n            //     </IconButton>\r\n            // )} */}\r\n\r\n            <Dialog open={props.openCallInfo} onClose={props.onClosingDialogBox} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Here's is the ID to your meeting </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Hello {name},<br />\r\n                        Copy this id and send it to people that you want to connect with. <br />\r\n                        {me || \"Loading...\"}\r\n\r\n                    </DialogContentText>\r\n\r\n                    {/* {console.log(me)} */}\r\n                    <CopyToClipboard onCopy={() => { console.log(\"copied\") }} text={me} className={classes.margin}>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<Assignment fontSize=\"large\" />}>\r\n                            Copy Meeting ID\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.onClosingDialogBox} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    {showJoin && (\r\n                        <Link to=\"/Join\">\r\n                            <Button color=\"primary\" onChange={handleJoin && props.onClosingDialogBox}>\r\n                                Join\r\n                            </Button>\r\n                        </Link>\r\n                    )}\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n}\r\n","import { Grid, Link } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { whileStatement } from '@babel/types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { Typography } from '@material-ui/core';\r\nimport { borders } from '@material-ui/system';\r\nimport { useContext, useEffect } from 'react';\r\nimport { SocketContext } from '../../SocketContext';\r\nimport Notification_toAcceptCall from '../Permission/Notification_toAcceptCall';\r\nimport { useState } from 'react';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DialogBox from '../Start_page/DialogBox';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#282c34\",\r\n        height: '100vh',\r\n    },\r\n    Video_Container: {\r\n        height: \"90%\",\r\n        // width: \"100%\",\r\n    },\r\n    Option_container: {\r\n        height: \"10%\",\r\n        width: \"100%\",\r\n        backgroundColor: \"white\",\r\n    },\r\n    SenderVideo_container: {\r\n        width: \"75%\",\r\n        height: \"90%\",\r\n        border: \"1\",\r\n        borderRadius: \"8px\",\r\n        color: \"white\",\r\n        marginLeft: \"2%\",\r\n        // backgroundColor: \"red\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: \"100%\",\r\n            height: \"85%\",\r\n        },\r\n    },\r\n    MyVideo_container: {\r\n\r\n        color: \"white\",\r\n        // backgroundColor: \"black\",\r\n\r\n        border: \"1\",\r\n        borderRadius: \"8px\",\r\n\r\n\r\n        overflow: \"hidden\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: \"80%\",\r\n            height: \"80%\",\r\n            marginRight: \"4px\",\r\n        },\r\n    },\r\n    fullScreen: {\r\n        marginLeft: \"10%\",\r\n        height: \"90%\",\r\n        width: \"80%\",\r\n    },\r\n    halfScreen: {\r\n        position: \"absolute\",\r\n        bottom: \"14%\",\r\n        right: \"2%\",\r\n        height: \"25%\",\r\n        width: \"20%\",\r\n    },\r\n\r\n    MyVideo: {\r\n        backgroundColor: \"black\",\r\n        height: \"100%\",\r\n        // width: \"95%\",\r\n        marginLeft: \"10px\",\r\n        color: \"white\",\r\n    },\r\n    SenderVideo: {\r\n        backgroundColor: \"black\",\r\n        height: \"100%\",\r\n        // width: \"95%\",\r\n        marginLeft: \"15px\",\r\n        // backgroundColor: \"#262626\",\r\n        // height: \"50%\",\r\n        // width: \"40%\",\r\n        border: \"1\",\r\n        borderRadius: \"5%\",\r\n        overflow: \"hidden\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: \"80%\",\r\n            height: \"80%\",\r\n        },\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n    }\r\n\r\n}));\r\n\r\nfunction VideoBox(props) {\r\n    const classes = useStyles(props);\r\n    const { sendMessage, callAccepted, myVideo, userVideo, callEnded, stream, call, room, leaveCall, chats } = useContext(SocketContext);\r\n    // useEffect(() => {\r\n    //     console.log(\"after setting ref\");\r\n    //     setConfig({ audio: true, video: true });\r\n    // }, [])\r\n    const handleCallEnd = () => {\r\n        // console.log(\"history \", props.history);\r\n        props.history.push(\"/\")\r\n        leaveCall()\r\n    }\r\n\r\n    const [openPermissionBox, setOpenPermision] = useState(false);\r\n    const onAdmitUserHandler = () => {\r\n        setOpenPermision(false);\r\n    }\r\n\r\n    const [openCallInfo, setOpenCallInfo] = useState(false);\r\n    const openCallInfoHandler = () => {\r\n        setOpenCallInfo(true);\r\n    }\r\n    const closeCallInfoHandler = () => {\r\n        setOpenCallInfo(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        sendMessage(\"hello everyone\")\r\n    }, [])\r\n\r\n    console.log(\"chats\", chats);\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            component=\"main\"\r\n            className={classes.root}\r\n            direction=\"column\">\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n\r\n                alignItems=\"center\"\r\n\r\n                className={classes.Video_Container}\r\n            >\r\n                {\r\n                    room.length > 0 && (\r\n                        <Grid className={classes.SenderVideo_container}>\r\n\r\n                            <video playsInline height=\"100%\" width=\"100%\" ref={userVideo} autoPlay className={classes.video}></video>\r\n\r\n                            <Grid>\r\n                                <Typography variant=\"h5\" gutterBottom>{call ? call.name : 'UserName'}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                }\r\n                {\r\n                    stream && room.length == 0 && (\r\n                        <Grid\r\n                            className={classes.MyVideo_container + \" \" + (!callAccepted || callEnded ? classes.fullScreen : classes.halfScreen)}>\r\n\r\n                            <video ref={myVideo} muted={true} height=\"100%\" width=\"100%\" autoPlay className={classes.video}></video>\r\n\r\n                            <Grid>\r\n                                <Typography color=\"white\" variant=\"h5\" gutterBottom>{\"You\"}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                className={classes.Option_container}\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid\r\n\r\n                    className={classes.OptionsBox}>\r\n                    <IconButton color=\"secondary\" className={classes.button} aria-label=\"Turn Mic off\">\r\n                        <MicIcon style={{ fontSize: 32 }} />\r\n                    </IconButton>\r\n\r\n                    <IconButton color=\"primary\" className={classes.button} aria-label=\"Turn Video off\">\r\n                        <VideocamIcon style={{ fontSize: 32 }} />\r\n                    </IconButton>\r\n                    <IconButton color=\"secondary\" className={classes.button} aria-label=\"End Call\" onClick={handleCallEnd}>\r\n                        <CallEndIcon style={{ fontSize: 32 }} />\r\n                    </IconButton>\r\n\r\n                    <IconButton color=\"primary\" onClick={openCallInfoHandler} className={classes.button} aria-label=\"Call Details\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    {openCallInfo && (<DialogBox openCallInfo onClosingDialogBox={closeCallInfoHandler} />)\r\n                    }\r\n\r\n\r\n\r\n                    {call != null && call.isReceivedCall && !callAccepted && (\r\n                        <Notification_toAcceptCall\r\n                            user={call.name}\r\n                            openPermissionBox\r\n                            onAdmitUser={onAdmitUserHandler} />\r\n                    )}\r\n\r\n\r\n                    {/* \r\n                    {call != null && call.isReceivedCall && !callAccepted && setOpenPermision(true)}\r\n\r\n                    <Notification_toAcceptCall\r\n                        openPermissionBox\r\n                        onAdmitUser={onAdmitUserHandler} /> */}\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withRouter(VideoBox);\r\n\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CenterFocusStrong } from '@material-ui/icons';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    // backgroundImage: 'url(C:\\Users\\ASUS\\Desktop\\connect_project\\public\\Background_image_main.png)',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(\"./Desktop_image.jpg\")',\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    //backgroundImage: 'url(BG_image)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n    paper_connect: {\r\n      backgroundImage: 'url(\"./Desktop_image.jpg\")',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          {/* <Box\r\n            className={classes.paper_connect}>hi</Box> */}\r\n          {/* <Avatar alt=\"Connect\" src=\"./Connect.png\" className={classes.avatar} /> */}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Join Meeting\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Enter your Name\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n              autoFocus\r\n            />\r\n            <Box className={classes.button}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Primary\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                Secondary\r\n              </Button>\r\n            </Box>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"code\"\r\n              label=\"Code\"\r\n              type=\"password\"\r\n              id=\"code\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Join\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from \"@material-ui/core\";\r\nimport { borders } from '@material-ui/system';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useContext, useRef } from \"react\";\r\nimport { SocketContext } from \"../SocketContext\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundImage: 'url(\"./BackgroungImage.png\")',\r\n        height: '100vh',\r\n    },\r\n    videoBox: {\r\n        backgroundColor: \"#262626\",\r\n        height: \"50%\",\r\n        width: \"40%\",\r\n        border: \"1\",\r\n        borderRadius: \"8px\",\r\n        overflow: \"hidden\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: \"80%\",\r\n            height: \"80%\",\r\n        },\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n    },\r\n    button: {\r\n        border: \"1\",\r\n        borderRadius: \"50%\"\r\n    },\r\n    header: {\r\n        height: \"20%\",\r\n        border: \"1\",\r\n    },\r\n    logo: {\r\n        backgroundImage: 'url(\"./BackgroungImage.png\")',\r\n        height: \"100%\",\r\n        zIndex: \"10\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(10),\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n        backgroundColor: theme.palette.primary.main,\r\n    }\r\n}));\r\n\r\nexport default function JoiningPage(props) {\r\n    const myVideo = useRef();\r\n    const classes = useStyles(props);\r\n\r\n    const { config, setConfig, stream, name, callId, joinRoom } = useContext(SocketContext);\r\n    // setAudio(true);\r\n\r\n    useEffect(() => {\r\n        myVideo.current.srcObject = stream;\r\n    }, [stream])\r\n\r\n    useEffect(() => {\r\n        console.log(\"after setting ref\");\r\n        setConfig({ audio: true, video: true });\r\n    }, [])\r\n    console.log(\"call id is \", callId)\r\n    return (\r\n        <Grid\r\n            container\r\n            component=\"main\"\r\n            direction=\"row\"\r\n            className={classes.root}\r\n        >\r\n            <Grid className={classes.header}>\r\n                <Grid className={classes.logo} />\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                component=\"main\"\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\">\r\n                <Grid\r\n                    className={classes.videoBox}\r\n                    alignItems=\"center\"\r\n                >\r\n                    {/* <Typography variant=\"h5\" gutterBottom >{name || \"Name\"}</Typography> */}\r\n                    {/* <Grid>\r\n                        <Avatar alt={name || \"a\"} className=\"avatar\">\r\n\r\n                        </Avatar>\r\n                    </Grid> */}\r\n\r\n\r\n                    <video height=\"100%\" width=\"100%\" muted ref={myVideo} autoPlay className={classes.video} />\r\n\r\n                </Grid>\r\n                <Grid\r\n                >\r\n                    {config.audio === true ? (\r\n                        <IconButton onChange={() => setConfig({ audio: false })} color=\"secondary\" className={classes.button} aria-label=\"Turn Mic off\">\r\n                            <MicIcon />\r\n                        </IconButton>\r\n                    ) : (\r\n                        <IconButton onChange={() => setConfig({ audio: true })} color=\"primary\" className={classes.button} aria-label=\"Turn Mic on\">\r\n                            <MicOffIcon />\r\n                        </IconButton>\r\n                    )}\r\n\r\n\r\n                    <IconButton color=\"primary\" className={classes.button} aria-label=\"Turn Video off\">\r\n                        <VideocamIcon />\r\n                    </IconButton>\r\n                    <Link to=\"/connect\">\r\n                        <Button variant=\"contained\" onClick={() => {\r\n                            console.log(\"attempt to call\", callId)\r\n                            if (callId)\r\n                                joinRoom()\r\n                        }} color=\"primary\">\r\n                            Join\r\n                        </Button>\r\n                    </Link>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid >\r\n    );\r\n}","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Box } from '@material-ui/core';\r\nimport { useContext, useState } from 'react';\r\nimport { SocketContext } from '../../SocketContext';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport JoiningPage from '../../Screens/JoiningPage';\r\nimport { CancelScheduleSendRounded } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(2),\r\n        },\r\n        paper_connect: {\r\n            backgroundImage: 'url(\"./Desktop_image.jpg\")',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor:\r\n                theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function JoinWithCode(props) {\r\n    const classes = useStyles(props);\r\n    const { name, connectToServer, callId, setCallId, joinRoom } = useContext(SocketContext);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        connectToServer(name);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleJoin = () => {\r\n        // joinRoom();\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.button}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Join with id\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Here's is the ID to your meeting </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Hello {name},<br />\r\n                        Enter the meeting id to connent with people.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"ID\"\r\n                        label=\"Enter meeting ID\"\r\n                        type=\"text\"\r\n                        value={callId}\r\n                        onChange={(e) => setCallId(e.target.value)}\r\n                        fullWidth\r\n\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <Link to=\"/Join\">\r\n                        <Button onClick={handleJoin} color=\"primary\">\r\n                            Join\r\n                        </Button>\r\n                    </Link>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </Box>\r\n    );\r\n}\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { SocketContext } from '../SocketContext';\r\nimport DialogBox from '../Components/Start_page/DialogBox';\r\nimport JoinWithCode from '../Components/Start_page/JoinWithCode';\r\n\r\nimport VideoCallRoundedIcon from '@material-ui/icons/VideoCallRounded';\r\n//import BackgroungImage from '.\\Images\\BackgroungImage';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundImage: 'url(\"./BackgroungImage.png\")',\r\n        height: '100vh',\r\n    },\r\n    side_image: {\r\n\r\n        backgroundImage: 'url(\"./Desktop_image.jpg\")',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        height: \"45%\",\r\n        width: \"30%\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: \"80%\",\r\n        }\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    header: {\r\n        height: \"15%\",\r\n        width: \"100%\",\r\n        border: \"1\",\r\n    },\r\n    // logo: {\r\n    //     marginLeft: \"5%\",\r\n    //     // marrginTop: \"2%\",\r\n    //     backgroundImage: 'url(\"./Connnect.png\")',\r\n    //     // backgroundImage: 'url(\"./Desktop_image.jpg\")',\r\n    //     backgroundRepeat: 'no-repeat',\r\n    //     backgroundColor:\r\n    //         theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    //     backgroundSize: 'cover',\r\n    //     backgroundPosition: 'center',\r\n    //     height: \"100%\",\r\n    //     width: \"8%\",\r\n    //     // zIndex: \"10\",\r\n    // },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(2),\r\n        },\r\n        paper_connect: {\r\n            backgroundImage: 'url(\"./Desktop_image.jpg\")',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor:\r\n                theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nexport default function Welcome_page(props) {\r\n    console.log(\"welcome page constructor\")\r\n    const { name, setName, connectToServer } = useContext(SocketContext);\r\n    // useEffect(() => {\r\n    //     console.log(\"check1\");\r\n    // }, [])\r\n    const [idToCall, setIdToCall] = useState('');\r\n    const classes = useStyles(props);\r\n\r\n    const [openCallInfo, setOpenCallInfo] = useState(false);\r\n    const openCallInfoHandler = () => {\r\n        connectToServer(name, true);\r\n        setOpenCallInfo(true);\r\n    }\r\n    const closeCallInfoHandler = () => {\r\n        setOpenCallInfo(false);\r\n    }\r\n    return (\r\n        <Grid\r\n            container\r\n            component=\"main\"\r\n            className={classes.root}\r\n        >\r\n            {/* <Grid className={classes.header}>\r\n                <Grid item className={classes.logo} />\r\n            </Grid> */}\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"space-evenly\"\r\n\r\n            >\r\n                <Grid\r\n                    item\r\n                    className={classes.side_image}\r\n                >\r\n                </Grid>\r\n                <Grid>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\">\r\n                        <Grid>\r\n                            <Avatar className={classes.avatar}>\r\n                                <VideoCallRoundedIcon />\r\n                            </Avatar>\r\n                        </Grid>\r\n                        <Grid>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Let's Connect\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            label=\"Enter your Name\"\r\n                            name=\"name\"\r\n                            autoComplete=\"name\"\r\n                            autoFocus\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></TextField>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={openCallInfoHandler}>\r\n                                New meeting\r\n                            </Button>\r\n                            {openCallInfo && (<DialogBox openCallInfo onClosingDialogBox={closeCallInfoHandler} />)}\r\n\r\n                            <JoinWithCode></JoinWithCode>\r\n                        </Grid>\r\n\r\n\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}","import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { GpsFixed } from \"@material-ui/icons\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main_box: {\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%,-50%) scale(0)\",\r\n        transition: \"200ms ease-in-out\",\r\n        // border: \"1px solid black\",\r\n        borderRadius: \"10px\",\r\n        zIndex: \"10\",\r\n        backgroundColor: \"white\",\r\n        width: \"500px\",\r\n        maxWidth: \"70%\",\r\n        fontFamily: \"sans-serif\",\r\n    },\r\n    header: {\r\n        padding: \"15px 15px\",\r\n        justifyContent: \"space-between\",\r\n        display: \"flex\",\r\n        borderBottom: \"1px solid grey\",\r\n    },\r\n    title: {\r\n        fontSize: \"1.25rem\",\r\n        // fontWeight: \"bold\",\r\n    },\r\n    close_button: {\r\n        cursor: \"pointer\",\r\n        border: \"none\",\r\n        outlined: \"none\",\r\n        background: \"none\",\r\n        fontSize: \"1.25rem\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    body: {\r\n        padding: \"15px 15px\",\r\n        color: \"grey\",\r\n    },\r\n\r\n    overlay: {\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        bottom: \"0\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        transition: \"200ms ease-in-out\",\r\n        PointerEvent: \"none\",\r\n    }\r\n\r\n}));\r\n\r\nexport default function PopUpGetId(props) {\r\n    const classes = useStyles(props);\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid className={classes.main_box}>\r\n                <Grid\r\n                    className={classes.header}\r\n                    direction=\"row\"\r\n                    alignItems=\"center\">\r\n                    <Grid className={classes.title}>Here's is the ID to your meeting </Grid>\r\n                    <Grid>\r\n                        <button className={classes.close_button}>&times;</button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid className={classes.body}>\r\n                    <Grid className={classes.body_text}>\r\n                        Copy this id and send it to people that you want to meet with. Make sure you also save it for future.\r\n                        njcksdkhffer njhfdskcxsmllhejkw hdjskxnsasnjkfhef fnskakc mdskncmsgfew dhewwhdewnxx ndsjkk\r\n                    </Grid>\r\n                    <Grid></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid className={classes.overlay}>\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n\r\n    );\r\n}","import { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useContext } from \"react\";\r\nimport { SocketContext } from \"../../SocketContext\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport DialogBox from \"../Start_page/DialogBox\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport { useState } from \"react\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Option_container: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#1a1a1a\",\r\n    },\r\n    Chat_participants_optionBox: {\r\n        position: \"absolute\",\r\n        right: \"2%\",\r\n    }\r\n\r\n}));\r\n\r\nfunction OptionFooter(props) {\r\n    const classes = useStyles(props);\r\n\r\n    const [openCallInfo, setOpenCallInfo] = useState(false);\r\n    const openCallInfoHandler = () => {\r\n        setOpenCallInfo(true);\r\n    }\r\n    const closeCallInfoHandler = () => {\r\n        setOpenCallInfo(false);\r\n    }\r\n\r\n    const { leaveCall } = useContext(SocketContext);\r\n    const handleCallEnd = () => {\r\n        // console.log(\"history \", props.history);\r\n        props.history.push(\"/\")\r\n        leaveCall()\r\n    }\r\n    const chatWindowHandler = () => {\r\n        if (props.sideBox === 0) {\r\n            props.onOpenChatWindow();\r\n        }\r\n        else if (props.sideBox === 1) {\r\n            props.onCloseSideWindow();\r\n        }\r\n        else {    //props.sideBox=2\r\n            props.onOpenChatWindow();\r\n        }\r\n    }\r\n\r\n    const peopleWindowHandler = () => {\r\n        if (props.sideBox === 0) {\r\n            props.onOpenPeopleWindow();\r\n        }\r\n        else if (props.sideBox === 1) {\r\n            props.onOpenPeopleWindow();\r\n        }\r\n        else {    //props.sideBox=2\r\n            props.onCloseSideWindow();\r\n        }\r\n    }\r\n    // const openChatWindowHandler = () => {\r\n    //     if (props.chatWindow)\r\n    //         props.onChatWindow(true);\r\n    //     else\r\n    //         props.onChatWindow(false);\r\n    // }\r\n    // const openParticipantsWindowHandler = () => {\r\n    //     if (props.participantsWindow)\r\n    //         props.onParticipantsWindow(true);\r\n    //     else\r\n    //         props.onParticipantsWindow(false);\r\n    // }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            className={classes.Option_container}\r\n            justify=\"center\"\r\n            alignItems=\"center\">\r\n            <Grid\r\n                className={classes.OptionsBox}>\r\n\r\n                <IconButton color=\"secondary\" className={classes.button} aria-label=\"Turn Mic off\">\r\n                    <MicIcon style={{ fontSize: 32 }} />\r\n                </IconButton>\r\n\r\n                <IconButton color=\"primary\" className={classes.button} aria-label=\"Turn Video off\">\r\n                    <VideocamIcon style={{ fontSize: 32 }} />\r\n                </IconButton>\r\n\r\n                <IconButton color=\"secondary\" className={classes.button} aria-label=\"End Call\" onClick={handleCallEnd}>\r\n                    <CallEndIcon style={{ fontSize: 32 }} />\r\n                </IconButton>\r\n\r\n\r\n\r\n            </Grid>\r\n            <Grid className={classes.Chat_participants_optionBox}>\r\n\r\n                <IconButton color=\"primary\" onClick={chatWindowHandler} className={classes.button} aria-label=\"Turn Video off\">\r\n                    <ChatIcon style={{ fontSize: 32 }} />\r\n                </IconButton>\r\n\r\n                <IconButton color=\"secondary\" onClick={peopleWindowHandler} className={classes.button} aria-label=\"End Call\" >\r\n                    <GroupIcon style={{ fontSize: 32 }} />\r\n                </IconButton>\r\n\r\n                <IconButton color=\"primary\" onClick={openCallInfoHandler} className={classes.button} aria-label=\"Call Details\">\r\n                    <InfoIcon style={{ fontSize: 32 }} />\r\n                </IconButton>\r\n                {openCallInfo && (<DialogBox openCallInfo onClosingDialogBox={closeCallInfoHandler} />)}\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withRouter(OptionFooter);","import { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useContext } from \"react\";\r\nimport { SocketContext } from \"../../SocketContext\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"black\",\r\n        border: \"1 solid black\",\r\n        borderRadius: \"8px\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    video: {\r\n        height: \"90%\",\r\n        width: \"100%\",\r\n    },\r\n    name: {\r\n        height: \"10%\",\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function UserVideoContainer(props) {\r\n    const classes = useStyles(props);\r\n    const { stream, me, room } = useContext(SocketContext);\r\n\r\n    useEffect(() => {\r\n        /// search corresponding stream for user id\r\n        if (props.userId === me) {\r\n            mainVideRef.current.srcObject = stream;\r\n            return;\r\n        }\r\n        let user = room.find(r => r.id === props.userId);\r\n        if (user) mainVideRef.current.srcObject = user.stream;\r\n    }, [props.userId])\r\n    const mainVideRef = useRef();\r\n    return (\r\n        <Grid className={classes.root}>\r\n            <Grid className={classes.video}>\r\n                <video muted ref={mainVideRef} height=\"100%\" width=\"100%\" autoPlay className={classes.video} />\r\n            </Grid>\r\n            <Grid className={classes.name}>\r\n                <Typography>\r\n                    {props.name}\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { SocketContext } from \"../../SocketContext\";\r\nimport UserVideoContainer from \"./UserVideoContainer\";\r\nimport { useEffect } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: \"1 solid black\",\r\n        borderRadius: \"8px\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    MyVideo_container: {\r\n        // padding: \"5px\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\n\r\nexport default function VideoContainer(props) {\r\n    const classes = useStyles(props);\r\n    const { room, name, myVideo, stream, setConfig, callAccepted, callEnded } = useContext(SocketContext);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Grid className={classes.root}>\r\n            {stream && (\r\n                <Grid\r\n                    className={classes.MyVideo_container}>\r\n                    <UserVideoContainer\r\n                        name={name}\r\n                        id={\"1\"}\r\n                        userId={props.userId}\r\n                        video={myVideo} />\r\n                    {\r\n                        console.log(\"my vidoe ref=\", myVideo)\r\n                    }\r\n                    {/* <Grid>\r\n                        {console.log(\"entered in video\")}\r\n                        <video muted ref={myVideo} height=\"100%\" width=\"100%\" autoPlay className={classes.video}></video>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Typography color=\"white\" variant=\"h5\" gutterBottom>{\"You\"}</Typography>\r\n                    </Grid> */}\r\n                </Grid>\r\n            )}\r\n            {console.log(room[0])}\r\n            {/* \r\n            {room.map((content) => (\r\n                <UserVideoContainer\r\n                    name={content.name}\r\n                    id={content.id}\r\n                    video={content.stream} />\r\n            ))} */}\r\n        </Grid>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography } from '@material-ui/core';\r\nimport { indigo } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText(indigo[500]),\r\n        backgroundColor: indigo[500],\r\n    }\r\n}));\r\n\r\nexport default function MessageBox(props) {\r\n    const classes = useStyles(props);\r\n    const avatar_letter = props.name.charAt(0);\r\n    const hrs = props.time.getHours();\r\n    const min = props.time.getMinutes();\r\n\r\n\r\n    return (\r\n        // <List className={classes.root}>\r\n        <ListItem>\r\n            <ListItemAvatar>\r\n                <Avatar className={classes.avatar}>\r\n                    {avatar_letter}\r\n                </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={\r\n                <React.Fragment>\r\n                    <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        {props.name + \" \"}\r\n                    </Typography>\r\n                    <Typography component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\">{hrs >= 12 ? hrs - 12 + \":\" + min + \" p.m.\" : hrs + \":\" + min + \" a.m.\"}</Typography>\r\n                </React.Fragment>}\r\n                secondary={props.message} />\r\n        </ListItem>\r\n        // </List>\r\n    );\r\n}\r\n","import { Grid, IconButton, List } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport MessageBox from \"./MessageBox\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport { SocketContext } from \"../../../SocketContext\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"white\",\r\n        border: \"1 solid black\",\r\n        borderRadius: \"8px\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n\r\n    },\r\n    body: {\r\n        backgroundColor: \"white\",\r\n        overflow: \"auto\",\r\n        height: \"90%\",\r\n        width: \"100%\",\r\n    },\r\n    input_footer: {\r\n        height: \"10%\",\r\n        // padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\",\r\n        backgroundColor: \"#e3e5e8\",\r\n\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n\r\n}));\r\n\r\nexport default function ChatWindow(props) {\r\n    const classes = useStyles(props);\r\n    const { chats, sendMessage } = useContext(SocketContext);\r\n    const [message, setMessage] = useState(\"\");\r\n    // console.log(\"in chat window chats\", chats);\r\n    const handleMessageSend = () => {\r\n        if (!message.trim()) {\r\n            return;\r\n        }\r\n        sendMessage(message.trim());\r\n        setMessage(\"\");\r\n    }\r\n    const handleKeyUp = (e) => {\r\n        if (e.key === \"Enter\" || e.keyCode === 13) {\r\n            handleMessageSend();\r\n        }\r\n    }\r\n    return (\r\n        <Grid className={classes.root}>\r\n            <List container direction=\"column\" className={classes.body}>\r\n                {chats.map((content) => (\r\n                    <MessageBox\r\n                        message={content.message}\r\n                        name={content.name}\r\n                        time={content.time} />\r\n                ))}\r\n            </List>\r\n            <Grid className={classes.inputFooter}>\r\n\r\n                {/* <TextField id=\"filled-basic\" label=\"Type your message\" variant=\"filled\" >\r\n                </TextField>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    endIcon={<SendIcon />}\r\n                >\r\n                    Send\r\n                </Button> */}\r\n                <Paper className={classes.input_footer}>\r\n\r\n                    <InputBase\r\n                        autoFocus=\"true\"\r\n                        className={classes.input}\r\n                        placeholder=\"Type your message\"\r\n                        value={message}\r\n                        onKeyUp={handleKeyUp}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                    />\r\n                    <IconButton onClick={handleMessageSend} className={classes.iconButton}>\r\n                        <SendIcon color=\"primary\" />\r\n                    </IconButton>\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography } from '@material-ui/core';\r\nimport { indigo } from '@material-ui/core/colors';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    item: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText(indigo[500]),\r\n        backgroundColor: indigo[500],\r\n    }\r\n}));\r\n\r\nexport default function PersonBox(props) {\r\n    const classes = useStyles(props);\r\n    const avatar_letter = props.name.charAt(0);\r\n\r\n\r\n    return (\r\n        <ListItem className={classes.item}>\r\n            <ListItemAvatar>\r\n                <Avatar className={classes.avatar}>\r\n                    {avatar_letter}\r\n                </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={\r\n                <React.Fragment>\r\n                    <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        {props.name + \" \"}\r\n                    </Typography>\r\n\r\n                </React.Fragment>} />\r\n\r\n        </ListItem>\r\n\r\n    );\r\n}\r\n","import { Grid, IconButton, List } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { SocketContext } from \"../../../SocketContext\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PersonBox from \"./PersonBox\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography } from '@material-ui/core';\r\nimport { indigo } from '@material-ui/core/colors';\r\nimport React from \"react\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"white\",\r\n        border: \"1 solid black\",\r\n        borderRadius: \"8px\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    body: {\r\n        backgroundColor: \"white\",\r\n\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    item: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText(indigo[500]),\r\n        backgroundColor: indigo[500],\r\n    }\r\n\r\n}));\r\n\r\nexport default function AllUserWindow(props) {\r\n    const classes = useStyles(props);\r\n    const { room, name } = useContext(SocketContext);\r\n    const avatar_letter = name.charAt(0);\r\n    const size = room.length;\r\n    return (\r\n        <Grid className={classes.root}>\r\n            <Grid container direction=\"column\" className={classes.body}>\r\n                <List>\r\n                    <ListItem className={classes.item}>\r\n\r\n                        <ListItemText primary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"h6\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    {size === 0 ? \"Only you are in the call\" : size + \" people joined the call\"}\r\n                                </Typography>\r\n\r\n                            </React.Fragment>} />\r\n                    </ListItem>\r\n                    <ListItem className={classes.item}>\r\n                        <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                {avatar_letter}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    {name + \"(You)\" + \" \"}\r\n                                </Typography>\r\n\r\n                            </React.Fragment>} />\r\n                    </ListItem>\r\n\r\n\r\n                    {room.map((content) => (\r\n                        <PersonBox\r\n                            name={content.name} />\r\n                    ))}\r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import { Grid, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport React from \"react\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { SocketContext } from \"../../SocketContext\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ChatWindow from \"./ChatFeature/ChatWindow\";\r\nimport AllUserWindow from \"./DisplayUserWindow/AllUserWindow\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"white\",\r\n        border: \"1 solid black\",\r\n        borderRadius: \"8px\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    header: {\r\n        height: \"10%\",\r\n        width: \"100%\",\r\n    },\r\n    body: {\r\n        height: \"90%\",\r\n        width: \"100%\",\r\n    },\r\n    titleRoot: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n        // fontWeight: \"bold\",\r\n        fontSize: \"20px\",\r\n        color: \"grey\",\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: \"2px\",\r\n        top: \"2px\",\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function SideWindow(props) {\r\n    const classes = useStyles(props);\r\n    const closeHandler = () => {\r\n        props.onCloseSideWindow();\r\n    }\r\n    // console.log(\"in side window chatWindow=\", props.chatWindow, \" ,people=\", props.participantsWindow);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"updated in sidewindow page chatWindow=\", props.chatWindow, \" , peopleWindow=\", props.participantsWindow);\r\n    // }, [props.chatWindow, props.participantsWindow]);\r\n\r\n    return (\r\n        <Grid className={classes.root}>\r\n            <Grid container direction=\"row\" className={classes.header}>\r\n                <List className={classes.titleRoot}>\r\n                    <ListItem>\r\n                        <ListItemText primary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    {/* People */}\r\n                                    {props.sideBox === 1 && \"In-call messages\"}\r\n                                    {props.sideBox === 2 && \"People in call\"}\r\n                                </Typography>\r\n                            </React.Fragment>} />\r\n                    </ListItem>\r\n                </List>\r\n                <Grid>\r\n                    <IconButton className={classes.closeButton} onClick={closeHandler}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {/* <Divider variant=\"inset\" component=\"li\" /> */}\r\n            <Grid className={classes.body}>\r\n                {props.sideBox === 1 && (\r\n                    <ChatWindow />\r\n                )}\r\n                {props.sideBox === 2 && (\r\n                    <AllUserWindow />\r\n                )}\r\n                {/* <AllUserWindow /> */}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import { Grid } from \"@material-ui/core\";\r\nimport OptionFooter from \"./OptionFooter\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport VideoContainer from \"./VideoContainer\";\r\nimport SideWindow from \"./SideWindow\";\r\nimport { SocketContext } from \"../../SocketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#b8e3f5\",\r\n        height: '100vh',\r\n    },\r\n    mainBody: {\r\n        height: \"92%\",\r\n        width: \"100%\",\r\n    },\r\n    videoContainer: {\r\n        // backgroundColor: \"white\",\r\n        // width: \"77%\",\r\n        // height: \"100%\",\r\n    },\r\n    fullScreen: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    halfScreen: {\r\n        width: \"77%\",\r\n        height: \"100%\",\r\n    },\r\n    sideWindow: {\r\n        height: \"100%\",\r\n        width: \"23%\",\r\n    },\r\n    optionFooter: {\r\n        height: \"8%\",\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function VideoConferenceMainPage(props) {\r\n    const classes = useStyles(props);\r\n    const [sideBox, setSideBox] = useState(0);\r\n    const { me } = useContext(SocketContext);\r\n\r\n    // 0 : chat=false && people=false\r\n    // 1 : chat= true && people=false\r\n    // 2 : chat= false && people=true\r\n\r\n    const openChatWindowHandler = () => {\r\n        setSideBox(1);\r\n    }\r\n    const openPeopleWindowHandler = () => {\r\n        setSideBox(2);\r\n    }\r\n    const closeSideWindowHandler = () => {\r\n        setSideBox(0);\r\n    }\r\n\r\n\r\n    // const [chatWindow, setChatWindow] = useState(false);\r\n    // const [participantsWindow, setParticipantsWindow] = useState(false);\r\n    // const ChatWindowHandler = (state) => {\r\n    //     if (state) {\r\n    //         setParticipantsWindow(false);\r\n    //         setChatWindow(true);\r\n    //         console.log(\"chat=true, people=false\");\r\n    //     }\r\n    //     else {\r\n    //         setChatWindow(false);\r\n    //         // setParticipantsWindow(true);\r\n    //         console.log(\"chat=false\");\r\n    //     }\r\n    //     console.log(\"chatWindow change\");\r\n    // }\r\n\r\n    // const participantsWindowHandler = (state) => {\r\n    //     if (state) {\r\n    //         setChatWindow(false);\r\n    //         setParticipantsWindow(true);\r\n    //         console.log(\"chat=false, people=true\");\r\n    //     }\r\n    //     else {\r\n    //         setParticipantsWindow(false);\r\n    //         // setChatWindow(true);\r\n    //         console.log(\"people=false\");\r\n    //     }\r\n    //     console.log(\"ParticipantsWindow change\");\r\n    // }\r\n    // console.log(\"inside main page chatWindow=\", chatWindow, \" , peopleWindow=\", participantsWindow);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"updated in main page chatWindow=\", chatWindow, \" , peopleWindow=\", participantsWindow);\r\n    // }, [chatWindow, participantsWindow]);\r\n    const [mainUserId, setMainUserId] = useState(me);\r\n    return (\r\n        <Grid className={classes.root}\r\n            container\r\n            direction=\"column\">\r\n            <Grid className={classes.mainBody} container direction=\"row\">\r\n                {/* + \" \" + (!chatWindow && !participantsWindow) ? classes.fullScreen : classes.halfScreen} */}\r\n                <Grid className={classes.videoContainer + \" \" + ((sideBox === 0) ? classes.fullScreen : classes.halfScreen)} >\r\n                    <VideoContainer userId={mainUserId} />\r\n                </Grid>\r\n                {sideBox != 0 && (\r\n                    <Grid className={classes.sideWindow}>\r\n                        <SideWindow\r\n                            sideBox={sideBox}\r\n                            onOpenChatWindow={openChatWindowHandler}\r\n                            onOpenPeopleWindow={openPeopleWindowHandler}\r\n                            onCloseSideWindow={closeSideWindowHandler} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <Grid className={classes.optionFooter}>\r\n                <OptionFooter\r\n                    sideBox={sideBox}\r\n                    onOpenChatWindow={openChatWindowHandler}\r\n                    onOpenPeopleWindow={openPeopleWindowHandler}\r\n                    onCloseSideWindow={closeSideWindowHandler} />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}","import VideoBox from './Components/Conference_page/VideoBox';\r\nimport Box from '@material-ui/core/Box';\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport SignInSide from './Components/Sign_in_page/SignInSide';\r\nimport Welcome_page from './Screens/Welcome_page';\r\nimport JoiningPage from './Screens/JoiningPage';\r\nimport PopUpGetId from './Components/Start_page/PopUpGetId';\r\nimport DialogBox from './Components/Start_page/DialogBox';\r\nimport { Route } from 'react-router-dom';\r\nimport Notification_toAcceptCall from './Components/Permission/Notification_toAcceptCall';\r\nimport VideoConferenceMainPage from './Components/Conference_page/VideoConferenceMainPage';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    // <VideoConferenceMainPage />\r\n\r\n    <div>\r\n      <Route path=\"/\" exact >\r\n        <Welcome_page />\r\n      </Route>\r\n\r\n      <Route path=\"/Welcome\">\r\n        <Welcome_page />\r\n      </Route>\r\n\r\n      <Route path=\"/Join\" >\r\n        <JoiningPage />\r\n      </Route>\r\n\r\n      <Route exact path=\"/Connect\">\r\n        <VideoConferenceMainPage />\r\n      </Route>\r\n      {/* \r\n      <Route path=\"*\">\r\n        Error 404\r\n      </Route> */}\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n\r\n  <BrowserRouter>\r\n    <ContextProvider>\r\n\r\n      <App />\r\n\r\n    </ContextProvider>\r\n  </BrowserRouter>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}